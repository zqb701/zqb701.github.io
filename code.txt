javascript
 "use strict";	//嚴格模式, 可以只用在函數中,前後用單引號亦可。
 
保留字

運算子
	小刮號(), 中刮號[], 大刮號{}, 雙引號(單引號)
	+, -, *, /, %	加減乘除餘
	-轉負值
	i++, i--, ++i, --i , i=j**k 次方	(有//嗎?)
	=, +=, -=, *=, /=, %=
	邏輯運算子：!否 &&且 ||或, (短路求值[https://realnewbie.com/coding/javascript/javascript-operators/])
	, , >,<, >=, <=, ==, !=, ===, !==
	+	字串連接
	+new Date()	轉型為數字
	~~取整數
	x <<= y, x >>= y, x >>>= y, x &= y, x ^= y, x |= y
	位元運算子
	條件（三元）運算子：var status = age >= 18 ? "成人" : "小孩";

變數
const, let, ver,
	數字
		n = parseInt(str[,n進位]); //轉數字,從開頭取用數字字元
		a.toFixed(0);	(a*3).toFixed(0);
		Nunber	//自動去掉前後空白, 空字串含全部空格轉為零,則 true 為 1、false 為 0,  null，則回傳 0
		Math物件

	
	字串
		idx=a.indexOf("_"[,起始]);	//找到在第一個字元傳回「0」, 找不到傳回-1
			lastIndexOf()		//從尾端找
		b=a.substring(開始[, 結束]);	//後參數較小時會自動對換
		b=a.substr(開始[, 長度]);	//可從字尾算起,-1為最後一個字元
		L=a.length;	//不加刮號
		d=toStiring([n進位]);	//
		toUpperCase / toLowerCase		//大小寫轉換
		
		replace();	//取代(正規式另詳)
		match;//傳回陣列(正規式另詳)

		search(支援正規式)
		split(支援正規式),傳回陣列,以符合規則的字串去分割其它字串
				
	正規式
		測試網站 https://regex101.com/
		https://www.knowledgefree.idv.tw/2019/11/jsregex-regular-expressionjavascript.html
		測試網站：https://regex101.com/
		const regex = /\d{5}/;		//連續5個數字
		regex.test(str);					//是否找到相符字串,傳回true或false, 
		regex.exec(str);					//傳回詳細資訊???

		以下為字串的math;
		result = XXX.match	//傳回陣列, 元素1為第一個符合的字串,result.index為位置
		//加上「g」才會列出所有符合字串
		//用前後括號代表變數,如$1,回存,以將Gnn換成Fnn。
	
	
	日期
		t=Date.now();	//單位：千分之一秒
		let now = new Date();
		let strM =now.getHours();
		if(strM.length == 1){
			strM = "0"+ strM;
		}
		getMinutes();
		計時器
		
	陣列Array
const aArray = [];
aArray[0] = 1;
aArray[6] = 3;

const bArray = [1, , 3];

const aArray = [1, 2, 3]
const copyArray = [...aArray]

const aArray = [1, 2, 3]
const bArray = [5, 6, ...aArray, 8, 9]

sArray.length = 2

const a = [0, 1, 2].map(item => item + 1)
Object.freeze(a) // JS特性，必須在用freeze讓array真的被const(固定)住
(duck:可能數列有規則, 以算式預先產生後, 不再改變)
Array.isArray(v);



流程
if(){	//false, null, undefined, 0, 空字串, ...
}else{
}
alert((1 == 1 ? 'Y' : 'N'))	//條件運算子/三元運算子

while (condition) {
  // code block to be executed
}

do {
  // code block to be executed
}while (condition);

for (var i = 0, j = 9; i <= j; i++, j--){...}
for (;cars[i];) {
  text += cars[i];
  i++;
}
for ...in ...
arr.forEach

以上可用continue;跳下一循環。或用break;跳出
try{
    throw new Error('Whoops!');
}catch(err){
    console.log(err.name + ': ' + err.message);
} finally {
    //不管錯誤與否都會被執行的區塊
}



對話框Popup Alert
	window.alert("成功!");
	if(window.confirm("刪除?") == true){...}
	result = window.prompt("姓名?", "許功蓋(預設值)");	//取消時傳回null
	進階自訂[https://bbcc-learncode.com.tw/javascript-popup-alert-教學：使用提示框的最佳實踐/]


JSON

BOM
Browser Object Model，window 最頂層，下有 document（DOM）、history、location、navigator、screen

DOM
Document Object Model，元素(節點))與選擇器。屬性,事件,方法。

API
	Fetch	抓網頁

自定函式
	function 關鍵字定義傳統函數，
	箭頭函數 (Arrow Functions) 
	
	
自定物件
這種建立物件的方式稱為「物件實字 (Object literal)」，同時也是 JSON 格式的核心語法。
i = 2;
var person = {
  name : 'Kuro',
  ["name2"] : "abc",
  ["name" + (2*i)] : "abc",
  job: 'Front-end developer',
  sayName: function() {
    alert( this.name );
  }
};

	signal.ford可以用signal["ford"]表示(不可是數字或有空白)
	for(name in list)count[name]++	//可用來累加變數name出現的次數
	obj.001;			//  SyntaxError: Unexpected number
	obj["001"];		//合法,可用
	
其它保留字

不合法的 JavaScript 的識別字：數字或含空白者不可當變數

特殊符號:https://ytliu0.pixnet.net/blog/post/230307977
色彩:

CSS Flexbox元件排列:https://www.oxxostudio.tw/articles/201501/css-flexbox.html

